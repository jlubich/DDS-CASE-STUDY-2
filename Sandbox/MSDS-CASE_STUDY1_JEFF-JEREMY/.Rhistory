Medians.By.State[order(Medians.By.State$IBU),]
ggplot(Medians.By.State, aes(x = reorder(State, IBU), y = IBU)) +
geom_bar(stat = 'identity', position = 'stack') + facet_grid(~ State)
reorder(State, IBU)
reorder(Medians.By.State$State, Medians.By.State$IBU)
ggplot(Medians.By.State, aes(x = reorder(Medians.By.State$State, Medians.By.State$IBU), y = IBU)) +
geom_bar(stat = 'identity', position = 'stack') + facet_grid(~ State)
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
geom_bar(stat = 'identity', position = 'stack') + facet_grid(~ State)
Medians.By.State <- Medians.By.State[order(Medians.By.State$IBU),]
Medians.By.State[order(Medians.By.State$IBU),]
Medians.By.State
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
geom_bar(stat = 'identity', position = 'stack')
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
geom_bar(stat = 'identity')
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
geom_bar(stat = 'identity') + facet_grid(~ State)
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
geom_bar(stat = 'identity') +
geom_line(aes(x=State, y=ABV*max(Medians.By.State$IBU)),stat="identity")
ggplot(Medians.By.State, aes(x = State, y = IBU)) +
#geom_bar(stat = 'identity') +
geom_line(aes(x=State, y=ABV*max(Medians.By.State$IBU)),stat="identity")
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=state))+geom_text(aes(label=state))+
geom_segment(aes(x=0.94,xend=0.96,yend=state))+
geom_segment(aes(x=1.04,xend=1.065,yend=state))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
#Both original plots are modified. First, removed the y axis for the second plot and also made left/right margin to -1.
g1 <- ggplot(data = Medians.By.State, aes(x = state, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = state, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
install.packages("gridExtra")
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
gg1 <- ggplot_gtable(ggplot_build(g1))
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=state))+
geom_segment(aes(x=0.94,xend=0.96,yend=state))+
geom_segment(aes(x=1.04,xend=1.065,yend=state))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=state))+
geom_segment(aes(x=0.94,xend=0.96,yend=state))+
geom_segment(aes(x=1.04,xend=1.065,yend=state))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
#Both original plots are modified. First, removed the y axis for the second plot and also made left/right margin to -1.
g1 <- ggplot(data = Medians.By.State, aes(x = State, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = State, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=State))+
geom_segment(aes(x=0.94,xend=0.96,yend=State))+
geom_segment(aes(x=1.04,xend=1.065,yend=State))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
g1 <- ggplot(data = Medians.By.State, aes(x = State, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = State, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=State))+
geom_segment(aes(x=0.94,xend=0.96,yend=State))+
geom_segment(aes(x=1.04,xend=1.065,yend=State))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
#Both original plots are modified. First, removed the y axis for the second plot and also made left/right margin to -1.
g1 <- ggplot(data = Medians.By.State, aes(x = State, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("Median ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = State, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("Median IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=State))+
geom_segment(aes(x=0.94,xend=0.96,yend=State))+
geom_segment(aes(x=1.04,xend=1.065,yend=State))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
#Both original plots are modified. First, removed the y axis for the second plot and also made left/right margin to -1.
g1 <- ggplot(data = Medians.By.State, aes(x = State, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("                Median ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = State, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("           Median IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
g1
g.mid
library(grid)
g.mid<-ggplot(Medians.By.State,aes(x=1,y=State))+geom_text(aes(label=State))+
geom_segment(aes(x=0.94,xend=0.96,yend=State))+
geom_segment(aes(x=1.04,xend=1.065,yend=State))+
ggtitle("States")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
#Both original plots are modified. First, removed the y axis for the second plot and also made left/right margin to -1.
g1 <- ggplot(data = Medians.By.State, aes(x = State, y = ABV)) +
geom_bar(stat = "identity") + ggtitle("                Median ABV") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = Medians.By.State, aes(x = State, y = IBU)) +xlab(NULL)+
geom_bar(stat = "identity") + ggtitle("           Median IBU") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(1,0,1,-1), "mm")) +
coord_flip()
#Now use library gridExtra and function d grid.arrange() to join plots. Before plotting all plots are made as grobs.
library(gridExtra)
gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))
grid.arrange(gg1,gg.mid,gg2,ncol=3,widths=c(4/9,1/9,4/9))
########  Map of USA with Brewery Quantities ########
BrewMap <- as.data.frame(BrewbyState)
names(BrewMap) <-c("state","Breweries")
BrewMap$state <- trimws(BrewMap$state)
us.regions <- read.csv('US_Regions.csv',header = T,sep = ",")
BrewMap <- merge(BrewMap,us.regions, by="state",all=TRUE)
library(ggplot2)
library(fiftystater)
library(mapproj)
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
BrewMap,us.regions, by="state",all=TRUE)
library(ggplot2)
library(fiftystater)
library(mapproj)
install.packages("fiftystater")
install.packages("mapproj")
########  Map of USA with Brewery Quantities ########
BrewMap <- as.data.frame(BrewbyState)
names(BrewMap) <-c("state","Breweries")
BrewMap$state <- trimws(BrewMap$state)
us.regions <- read.csv('US_Regions.csv',header = T,sep = ",")
BrewMap <- merge(BrewMap,us.regions, by="state",all=TRUE)
library(ggplot2)
library(fiftystater)
library(mapproj)
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
########  Map of USA with Brewery Quantities ########
BrewMap <- as.data.frame(BrewbyState)
names(BrewMap) <-c("state","Breweries")
BrewMap$state <- trimws(BrewMap$state)
us.regions <- read.csv('US_Regions.csv',header = T,sep = ",")
BrewMap <- merge(BrewMap,us.regions, by="state",all=TRUE)
## Initialize Directories
setwd("~/LocalGitHubFiles/MSDS-CASE_STUDY1_JEFF-JEREMY")
getwd()
########  Map of USA with Brewery Quantities ########
BrewMap <- as.data.frame(BrewbyState)
names(BrewMap) <-c("state","Breweries")
BrewMap$state <- trimws(BrewMap$state)
us.regions <- read.csv('US_Regions.csv',header = T,sep = ",")
BrewMap <- merge(BrewMap,us.regions, by="state",all=TRUE)
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "yellow", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "green", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "darkgreen", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "darkyellow", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
# map_id creates the aesthetic mapping to the state name column in your data
Mapplot <- ggplot(BrewMap, aes(map_id = region)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Breweries), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(fill = "Brewery\nQuantity",
title = "Breweries by State",
x = "",
y = "") +
scale_fill_continuous(low = "orange", high = "darkred", guide="colorbar")+
theme(legend.position = "bottom",
panel.background = element_blank()) +
# add border boxes to AK/HI
fifty_states_inset_boxes()
Mapplot
install.packages("XML")
install.packages("plotly")
install.packages("DBI")
install.packages("data.table")
install.packages("htmlwidgets")
unloadNamespace("plotly")   # or lapply()-ing as you attempted with `detach`
update.packages("plotly")
require(plotly)
unloadNamespace("htmlwidgets")   # or lapply()-ing as you attempted with `detach`
update.packages("htmlwidgets")
require(htmlwidgets)
unloadNamespace("plotly")   # or lapply()-ing as you attempted with `detach`
unloadNamespace("plotly")   # or lapply()-ing as you attempted with `detach`
unloadNamespace("htmlwidgets")   # or lapply()-ing as you attempted with `detach`
update.packages("htmlwidgets")
require(htmlwidgets)
require(plotly)
unloadNamespace("plotly")
unloadNamespace("htmlwidgets")
require(plotly)
require(htmlwidgets)
library(plotly)
install.packages(plotly)
install.packages(plotly)
install.packages(plotly)
install.packages(plotly)
install.packages(c("plotly"))
install.packages(c("plotly"))
install.packages("plotly", dependencies = TRUE)
require(htmlwidgets)
require(plotly)
library(htmlwidgets)
library(plotly)
ggplotly()
.libPaths()
install.packages(c("scales","reshape","ggplot2","htmlwidgets","XML","plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
install.packages(c("scales","reshape","ggplot2","htmlwidgets","XML","plotly"))
install.packages(c("scales", "reshape", "ggplot2", "htmlwidgets", "XML", "plotly"))
speed <- c(20, 30, 40, 50, 60)
mpg <- c(24, 28, 30, 28, 24)
speed.mpg <- data.frame(speed, mpg)
plot(speed.mpg)
cor(speed.mpg)
cor(speed, mpg)
plot(speed.mpg)
cor(speed, mpg)
speed <- c(20, 30, 40, 50, 60)
mpg <- c(24, 28, 30, 28, 24)
speed.mpg <- data.frame(speed, mpg)
plot(speed.mpg)
cor(speed, mpg)
speed <- c(20, 30, 40, 50, 60)
mpg <- c(24, 28, 30, 28, 24)
speed.mpg <- data.frame(speed, mpg)
plot(speed.mpg)
cor(speed, mpg)
plot(speed.mpg, main="Speed vs MPG")
